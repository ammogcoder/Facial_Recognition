<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>